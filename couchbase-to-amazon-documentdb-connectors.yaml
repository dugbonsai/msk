Parameters:
  DocumentDbSinkMcuCount:
    Description: Each MCU provides 1 vCPU of compute and 4 GiB of memory.
    Type: Number
    AllowedValues:
      - 1
      - 2
      - 4
      - 8
  DocumentDbSinkMcuWorkers:
    Description: A worker is a Java virtual machine (JVM) connect process. There will be one worker per instance.
    Type: Number
    AllowedValues:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
  CouchbaseSourceMcuCount:
    Description: Each MCU provides 1 vCPU of compute and 4 GiB of memory.
    Type: Number
    AllowedValues:
      - 1
      - 2
      - 4
      - 8
  CouchbaseSourceMcuWorkers:
    Description: A worker is a Java virtual machine (JVM) connect process. There will be one worker per instance.
    Type: Number
    AllowedValues:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
  S3BucketName:
    Description: Name of S3 bucket where MSK resources are stored.
    Type: String
  BootstrapServers:
    Description: Comma-separated list of MSK cluster bootstrap servers. 
    Type: String
  SecurityGroupId:
    Description: Security group ID for migration resources.
    Type: String
  PrivateSubnets:
    # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-supplied-parameter-types.html#cloudformation-supplied-parameter-types-overview
    Description: Select private subnets within the specified VPC.
    Type: List<AWS::EC2::Subnet::Id>
    
Resources:
# KafkaConnect resources
  DocumentDBCustomPlugin:
    Type: AWS::KafkaConnect::CustomPlugin
    Properties:
      ContentType: 'ZIP'
      Description: 'Amazon DocumentDB plug-in.'
      Location: 
        S3Location: 
          BucketArn: !Join
            - ''
            - - 'arn:aws:s3:::'
              - !Ref S3BucketName
          FileKey: "docdb-custom-plugin.zip"
      Name: cfn-documentdb-plugin

  CouchbaseCustomPlugin:
    Type: AWS::KafkaConnect::CustomPlugin
    Properties:
      ContentType: 'ZIP'
      Description: 'Couchbase plug-in.'
      Location: 
        S3Location: 
          BucketArn: !Join
            - ''
            - - 'arn:aws:s3:::'
              - !Ref S3BucketName
          FileKey: "couchbase-kafka-connect-couchbase-4.2.8.zip"
      Name: cfn-couchbase-plugin

  DocumentDbSinkConnector:
    DependsOn:
      - DocumentDBCustomPlugin
    Type: AWS::KafkaConnect::Connector
    Properties:
      Capacity:
        ProvisionedCapacity:
          McuCount: !Ref DocumentDbSinkMcuCount
          WorkerCount: !Ref DocumentDbSinkMcuWorkers
      ConnectorConfiguration:
        connector.class: 'com.mongodb.kafka.connect.MongoSinkConnector'
        document.id.strategy.overwrite.existing: 'true'
        connection.ssl.truststorePassword: 'password'
        writemodel.strategy: 'com.mongodb.kafka.connect.sink.writemodel.strategy.ReplaceOneDefaultStrategy'
        tasks.max: '15'
        topics: 'couchbase-to-documentdb'
        transforms: 'hk'
        transforms.hk.type: 'org.apache.kafka.connect.transforms.HoistField$Key'
        config.providers: 's3import,ssm,sm'
        transforms.hk.field: '_id'
        collection: '<REPLACE WITH TARGET COLLECTION NAME>'
        connection.ssl.truststore: '${s3import:us-west-2:dbonser-998564492370-cfn-testing/docdb-truststore.jks}'
        config.providers.s3import.param.region: 'us-west-2'
        key.converter.schemas.enable: 'false'
        database: '<REPLACE WITH TARGET DATABASE NAME>'
        document.id.strategy: 'com.mongodb.kafka.connect.sink.processor.id.strategy.ProvidedInKeyStrategy'
        connection.uri: '<REPLACE WITH TARGET DOCUMENTDB CLUSTER CONNECTION STRING>'
        value.converter.schemas.enable: 'false'
        errors.tolerance: 'all'
        value.converter: 'org.apache.kafka.connect.json.JsonConverter'
        max.batch.size: '100'
        config.providers.s3import.class: 'com.amazonaws.kafka.config.providers.S3ImportConfigProvider'
        key.converter: 'org.apache.kafka.connect.storage.StringConverter'
      ConnectorName: 'cfn-documentdb-sink-connector'
      KafkaCluster: 
        ApacheKafkaCluster: 
          BootstrapServers: !Ref BootstrapServers
          Vpc:
            SecurityGroups:
              - !Ref SecurityGroupId
            Subnets: !Split [',', !Join [',', !Ref PrivateSubnets]]
      KafkaClusterClientAuthentication:
        AuthenticationType: 'IAM' 
      KafkaClusterEncryptionInTransit:
        EncryptionType: 'TLS' 
      KafkaConnectVersion: '2.7.1'
      LogDelivery:
        WorkerLogDelivery:
          CloudWatchLogs:
            Enabled: true
            LogGroup: '/couchbase/migration'
      Plugins: 
        - CustomPlugin:
            CustomPluginArn: 
              - !GetAtt DocumentDBCustomPlugin.CustomPluginArn
#            CustomPluginArn: 'arn:aws:kafkaconnect:us-west-2:998564492370:custom-plugin/cfn-documentdb-plugin/1160362e-0d12-4ae4-923b-10c69c34b293-3'
            Revision: 
              - !GetAtt DocumentDBCustomPlugin.Revision
#           Revision: 1
      ServiceExecutionRoleArn: 'arn:aws:iam::998564492370:role/cfn-migration-msk-role'

  CouchbaseSourceConnector:
    DependsOn:
      - CouchbaseCustomPlugin
    Type: AWS::KafkaConnect::Connector
    Properties:
      Capacity:
        ProvisionedCapacity:
          McuCount: !Ref CouchbaseSourceMcuCount
          WorkerCount: !Ref CouchbaseSourceMcuWorkers
      ConnectorConfiguration:
        connector.class: 'com.couchbase.connect.kafka.CouchbaseSourceConnector'
        couchbase.persistence.polling.interval: '100ms'
        couchbase.bootstrap.timeout: '10s'
        tasks.max: '15'
        couchbase.env.timeout.kvTimeout: '10s'
        couchbase.log.document.lifecycle: 'false'
        couchbase.replicate.to: 'NONE'
        couchbase.seed.nodes: '<REPLACE WITH SOURCE COUCHBASE CLUSTER SEED NODES>'
        couchbase.source.handler: 'com.couchbase.connect.kafka.handler.source.RawJsonSourceHandler'
        couchbase.enable.tls: 'false'
        couchbase.bucket: '<REPLACE WITH SOURCE BUCKET>'
        couchbase.flow.control.buffer: '16m'
        couchbase.stream.from: 'SAVED_OFFSET_OR_BEGINNING'
        couchbase.username: '<REPLACE WITH USERNAME>'
        couchbase.event.filter: 'com.couchbase.connect.kafka.filter.AllPassFilter'
        couchbase.password: '<REPLACE WITH PASSWORD>'
        value.converter: 'org.apache.kafka.connect.converters.ByteArrayConverter'
        key.converter: 'org.apache.kafka.connect.storage.StringConverter'
        couchbase.topic: 'couchbase-to-documentdb'
      ConnectorName: 'cfn-couchbase-source-connector'
      KafkaCluster: 
        ApacheKafkaCluster: 
          BootstrapServers: !Ref BootstrapServers
          Vpc:
            SecurityGroups:
              - !Ref SecurityGroupId
            Subnets: !Split [',', !Join [',', !Ref PrivateSubnets]]
      KafkaClusterClientAuthentication:
        AuthenticationType: 'IAM' 
      KafkaClusterEncryptionInTransit:
        EncryptionType: 'TLS' 
      KafkaConnectVersion: '2.7.1'
      LogDelivery:
        WorkerLogDelivery:
          CloudWatchLogs:
            Enabled: true
            LogGroup: '/couchbase/migration'
      Plugins: 
        - CustomPlugin:
            CustomPluginArn: 
              - !GetAtt CouchbaseCustomPlugin.CustomPluginArn
#            CustomPluginArn: 'arn:aws:kafkaconnect:us-west-2:998564492370:custom-plugin/cfn-couchbase-plugin/e4addb27-aa0d-4191-a562-de29cff13bb4-3'
            Revision: 
              - !GetAtt CouchbaseCustomPlugin.Revision
#            Revision: 1
      ServiceExecutionRoleArn: 'arn:aws:iam::998564492370:role/cfn-migration-msk-role'
